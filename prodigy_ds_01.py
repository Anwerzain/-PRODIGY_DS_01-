# -*- coding: utf-8 -*-
"""(PRODIGY_DS_01).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z5qmegrCXMqFH3BByU574BuJLDL13-iN
"""

# -*- coding: utf-8 -*-
# ===========================================
# üå≥ TASK-01: Data Visualization (World Bank Population)
# Dataset: Any World Bank CSV (Population/Indicators)
# ===========================================

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

# -------------------------------------------
# Step 1: Upload CSV
# -------------------------------------------
print("üìÅ Please upload your World Bank CSV file:")
uploaded = files.upload()
file_name = list(uploaded.keys())[0]

# -------------------------------------------
# Step 2: Read CSV (skip metadata rows)
# -------------------------------------------
try:
    df = pd.read_csv(file_name, skiprows=4)
except pd.errors.ParserError:
    df = pd.read_csv(file_name, engine='python')

print("\n‚úÖ Dataset loaded successfully!")
display(df.head())
print("\nColumns in Dataset:", df.columns)

# -------------------------------------------
# Step 3: Detect numeric columns corresponding to years
# -------------------------------------------
# Keep only columns which are 4-digit numbers (1960-2024)
year_cols = [col for col in df.columns if col.isdigit()]
if len(year_cols) == 0:
    print("‚ö†Ô∏è No year columns found! Cannot generate charts.")
else:
    latest_year = year_cols[-1]
    print(f"\n‚úÖ Using latest year column: {latest_year}")

if 'Country Name' in df.columns:
        top10 = df[['Country Name', latest_year]].sort_values(by=latest_year, ascending=False).head(10)
        plt.figure(figsize=(12,6))
        sns.barplot(data=top10, x='Country Name', y=latest_year, palette="Set2")
        plt.title(f"Top 10 Countries by Population in {latest_year}")
        plt.xticks(rotation=45)
        plt.show()
    else:
        print("‚ö†Ô∏è Column 'Country Name' not found!")

# -------------------------------------------
    # Step 5: Histogram of Population
    # -------------------------------------------
    plt.figure(figsize=(12,6))
    sns.histplot(df[latest_year].dropna(), bins=30, kde=True, color='skyblue')
    plt.title(f"Population Distribution in {latest_year}")
    plt.show()

# -------------------------------------------
    # Step 6: Trend Line Plot for Top 5 Countries
    # -------------------------------------------
    top5_countries = top10['Country Name'].head(5).tolist()
    plt.figure(figsize=(12,6))
    for country in top5_countries:
        country_data = df[df['Country Name'] == country][year_cols].T
        country_data.columns = [country]
        plt.plot(country_data.index.astype(int), country_data[country], marker='o', label=country)

    plt.title('Population Trend of Top 5 Countries')
    plt.xlabel('Year')
    plt.ylabel('Population')
    plt.legend()
    plt.grid(True)
    plt.show()

